name: Update Features

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/update-features.yml'
      - 'src/**'

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq and moreutils (sponge)
        run: sudo apt-get install -y jq moreutils

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check last commit message
        id: last_commit
        run: |
          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "LAST_COMMIT_MESSAGE=$LAST_COMMIT_MESSAGE" >> "$GITHUB_ENV"
 
      - name: Check should continue
        id: should_continue
        run: |
          echo "SHOULD_CONTINUE=$(! [[ "$LAST_COMMIT_MESSAGE" == *"Automated devcontainer features update"* ]])" >> "$GITHUB_ENV"
          echo "$GITHUB_ENV"

      - name: Generate Documentation
        if: env.SHOULD_CONTINUE == 'true'
        uses: devcontainers/action@v1
        with:
          generate-docs: "true"
          base-path-to-features: "./src"

      - name: Update devcontainer-feature.json
        if: env.SHOULD_CONTINUE == 'true'
        run: |
          CHANGED_FEATURES=$(git diff --name-only HEAD~1 HEAD -- ./src | awk -F'/' '{print $2}' | uniq)
          for feature in $CHANGED_FEATURES; do
              if [[ -d "./src/$feature" ]]; then
                  json_file="src/$feature/devcontainer-feature.json"
                  jq '.version = (.version | split(".") | map(tonumber) | .[2] += 1 | join("."))' "$json_file" | sponge "$json_file"
              else
                  echo "No directory found for $feature"
                  exit 1
              fi
          done

      - name: Create a PR for Features
        if: env.SHOULD_CONTINUE == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          echo "Start."
      
          git config --global user.email github-actions@github.com
          git config --global user.name github-actions
          git config pull.rebase false
      
          branch=automated-features-update-$GITHUB_RUN_ID
          git checkout -b $branch
          message='Automated devcontainer features update'
      
          git add */**/README.md
          git add src/**/devcontainer-feature.json
          git commit -m "$message" || export NO_UPDATES=true
      
          if [ "$NO_UPDATES" != "true" ] ; then
              git push origin "$branch"
              gh api \
                --method POST \
                -H "Accept: application/vnd.github+json" \
                /repos/${GITHUB_REPOSITORY}/pulls \
                -f title="$message" \
                -f body="$message" \
                -f head="$branch" \
                -f base='main'
          fi
