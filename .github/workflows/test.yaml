#example=https://github.com/devcontainers/features/blob/main/.github/workflows/test-all.yaml
name: "CI - Test Features"
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/test.yaml'
      - 'src/**'
      - 'test/**'

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      should_continue: ${{ steps.should_continue.outputs.value }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check last commit message
        id: last_commit
        run: |
          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B | tr -dc '[:alnum:] ')
          echo "LAST_COMMIT_MESSAGE=$LAST_COMMIT_MESSAGE" >> "$GITHUB_ENV"

      - name: Check should continue
        id: should_continue
        run: |
          echo "value=$(if [[ "$LAST_COMMIT_MESSAGE" == *"Automated devcontainer features update"* ]]; then echo "false"; else echo "true"; fi)" >> "$GITHUB_OUTPUT"

  test:
    runs-on: ubuntu-latest
    continue-on-error: true
    if: needs.check.outputs.should_continue == 'true'
    strategy:
      matrix:
        features: [
            "color",
            "hello",
            "sudo-command",
            "user-command"
        ]
        baseImage:
          [
            "mcr.microsoft.com/devcontainers/base:ubuntu",
            "mcr.microsoft.com/devcontainers/base:debian",
            "ubuntu:focal",
            "ubuntu:jammy",
            "ubuntu:bionic",
            "debian:11",
            "debian:10"
          ]
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-scenarios:
    runs-on: ubuntu-latest
    continue-on-error: true
    if: needs.check.outputs.should_continue == 'true'
    strategy:
      matrix:
        features: [
            "color",
            "hello",
            "sudo-command",
            "user-command"
        ]
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing '${{ matrix.features }}' scenarios"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated  .

  test-global:
    runs-on: ubuntu-latest
    continue-on-error: true
    if: needs.check.outputs.should_continue == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .
